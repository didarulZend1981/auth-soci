role base authintication using laravel 10 with breez step by step

composer create-project laravel/laravel auth-soci "8.5.*"

01.Laravel Installation:-
    composer create-project --prefer-dist laravel/laravel blog
02.Laravel UI Installation:-
    composer require laravel/ui


03.After Composer installation run artisan command to generate scaffolding.
    // Generate basic scaffolding...
        php artisan ui bootstrap
        php artisan ui vue
        php artisan ui react

    // Generate login / registration scaffolding...
        php artisan ui bootstrap --auth
        php artisan ui vue --auth
        php artisan ui react --auth


04.After generating UI need to install npm dependencies:-
        npm run install && npm run dev



05.php artisan make:model Role -m
06.Table create
	1.user Tabel
		$table->id();
        $table->string('name');
        $table->integer('role_id')->default(2);
        $table->tinyInteger('isban')->default(0);
        $table->string('last_seen')->nullable();
        $table->string('phone')->nullable();
        $table->string('provider_id')->nullable();
        $table->string('image')->nullable();
        $table->string('email')->unique();
        $table->timestamp('email_verified_at')->nullable();
        $table->string('password')->nullable();
        $table->rememberToken();
        $table->timestamps();
    2.role Tabel
        $table->id();
        $table->string('name');
        $table->timestamps();

07.Model create
    1.role Model
        protected $fillable = [
            'name',
        ];

        public function user(){
            return $this->hasMany('App\Models\User');
        }
    2.user Model
        protected $fillable = [
            'name',
            'email',
            'phone',
            'image',
            'password',
            'role_id',
            'last_seen',
            'isban',
        ];
        public function role(){
            return $this->belongsTo('App\Models\Role');
        }

08.Next to Migrate the database:-
        php artisan migrate:refresh


php artisan make:seeder RoleSeeder
    database/seeders/RoleSeeder.php
	php

		namespace Database\Seeders;

		use Illuminate\Database\Seeder;
		use App\Models\Role;

	class RoleSeeder extends Seeder{
    		public function run()
    		{
        	Role::create(['name' => 'admin']);
        	Role::create(['name' => 'user']);
       		 // আরও roles এখানে যুক্ত করতে পারেন
    		}
	}

	database/seeders/DatabaseSeeder.php

	php

		namespace Database\Seeders;

		use Illuminate\Database\Seeder;

		class DatabaseSeeder extends Seeder{
   		 public function run(){
       		 $this->call(RoleSeeder::class);
       			 // অন্যান্য seeder গুলি কল করতে পারেন
    			}
		}
    php artisan migrate
    php artisan db:seed


09.Middleware
    command:
        admin:-php artisan make:middleware AdminMiddleware
        user:-php artisan make:middleware UserMiddleware
    The following is the code for app/Http/Kernel.php −

    protected $routeMiddleware = [
      -------------------
      -------------------
      'admin' => \App\Http\Middleware\AdminMiddleware::class,
      'user' => \App\Http\Middleware\UserMiddleware::class,
   ];

   AdminMiddleware.php
   use Illuminate\Support\Facades\Auth;
        if (Auth::check() && Auth::user()->role_id != 2) {
            return $next($request);
        }else{
            return redirect()->route('login');
        }

    UserMiddleware.php
    use Illuminate\Support\Facades\Auth;
         if (Auth::check() && Auth::user()->role_id != 1) {
            return $next($request);
        }else{
            return redirect()->route('login');
        }

    RedirectIfAuthenticated.php
        public function handle(Request $request, Closure $next, ...$guards){
            $guards = empty($guards) ? [null] : $guards;

            foreach ($guards as $guard) {


                if (Auth::guard($guard)->check() && Auth::user()->role->id == 1 ) {
                    return redirect()->route('admin.dashboard');
        
                }elseif (Auth::guard($guard)->check() && Auth::user()->role->id == 2) {
                    return redirect()->route('user.dashboard');
                }else{
                    return $next($request);
                } 
            }

        }

10.Make Controler
    php artisan make:controller Admin/AdminController
    php artisan make:controller User/UserController
    class AdminController extends Controller{
        public function index(){
            return view('admin.home');
        }

    }

    

    class UserController extends Controller{
        public function index(){
            return view('user.home');
        }
    }

11.web
    use App\Http\Controllers\User\UserController;
    Use App\Http\Controllers\Admin\AdminController;
    Route::group(['prefix'=>'admin','middleware' =>['admin','auth','permission']], function(){
    Route::get('dashboard',[AdminController::class,'index'])->name('admin.dashboard');
    });


    Route::group(['prefix'=>'user','middleware' =>['user','auth']], function(){
    Route::get('dashboard',[UserController::class,'index'])->name('user.dashboard');
    });


12.LoginController
    protected function redirectTo(){
            if (Auth()->user()->role_id !=2 ) {
                return route('admin.dashboard');

            }elseif (Auth()->user()->role_id ==2 ) {
            return route('user.dashboard');
            }
        }
13.RegisterController
    protected function redirectTo(){
            if (Auth()->user()->role_id !=2 ) {
                return route('admin.dashboard');

            }elseif (Auth()->user()->role_id ==2 ) {
            return route('user.dashboard');
            }
        }
    protected function validator(array $data){
        return Validator::make($data, [
            'name' => ['required', 'string', 'max:255'],
            'phone' => ['required',],
            'email' => ['required', 'string', 'email', 'max:255', 'unique:users'],
            'password' => ['required', 'string', 'min:8', 'confirmed'],
        ]);
    }

    protected function create(array $data){
        return User::create([
            'name' => $data['name'],
            'phone' => $data['phone'],
            'image' => 'fontend/media/avatar.png',
            'role_id' => 2,
            'email' => $data['email'],
            'password' => Hash::make($data['password']),
        ]);
    }
14.create two folder
    admin->home.blade.php
    user->home.blade.php
15.make 2 controller 

    class AdminController extends Controller{
        public function index(){
            return view('admin.home');
        }
    }

    class UserController extends Controller{
        public function index(){
            return view('user.home');
        }
    }


   





#####
old project run

Run composer install or php composer.phar install or composer update
Run php artisan key:generate
Run php artisan migrate
Run php artisan db:seed to run seeders, if any.
Run php artisan serve
#####You can now access your project at localhost:8000 :)

If for some reason your project stop working do these:
composer install
php artisan migrate